
<div class="inventory">
<h3>Inventory</h3>
You have the following items in your inventory:
    <span></span>
    <button class="clear">Remove items</button>
</div>

<script src="/scripts/global.js" is:inline></script>

<script>
    import itemsJson from '../assets/items.json';
    let itemsToRender = [];

    const clearButton = document.querySelector('.clear');
    clearButton.addEventListener('click', function() {
        localStorage.setItem("inventory", "");
        itemsToRender = [];
        renderItems(itemsToRender);
    });


    function showModal(item) {
        document.addEventListener('keydown', function(event) {
            if (event.key === 'Escape') {
                const modal = document.querySelector('.modal');
                if (modal) {
                    modal.classList.add('fade-out');
                    setTimeout(() => {
                        document.body.removeChild(modal);
                    }, 500);
                }
            }
        });
        console.log("modal", item.name);

        const modal = document.createElement('div');
        modal.classList.add('modal');
        modal.innerHTML = `
            <div class="modal-content">
                <span class="close-button">&times;</span>
                <div><h2>${item.name}</h2></div>
                <div>${item.description}</div>
                <div>
                    <img src="/images/${item.url}" />
                </div>
            </div>
        `;
        document.body.appendChild(modal);

        const closeButton = modal.querySelector('.close-button');
        closeButton.addEventListener('click', function() {
            modal.classList.add('fade-out');
            setTimeout(() => {
                document.body.removeChild(modal);
            }, 500);
        });

        modal.addEventListener('click', function(event) {
            if (event.target === modal) {
                document.body.removeChild(modal);
            }
        });
    }

    function renderItems(items) {
        console.log("rendering items");

        let inventorySpan = document.querySelector('.inventory span');
        inventorySpan.innerHTML = '';

        // render each item as div elem
        items.forEach(item => {
            const itemDiv = document.createElement('div');
           
            itemDiv.classList.add("item");
            itemDiv.addEventListener('click', () => {
                showModal(item);
            });

            itemDiv.textContent = item.name;
            itemDiv.id = item.id;

            inventorySpan.appendChild(itemDiv);
        });
    }

    function getItems() {
        console.log("getting items from storage");

        let storage = localStorage.getItem("inventory");
        if(storage != null && storage != "") {
            itemsToRender = JSON.parse(storage);
            renderItems(itemsToRender);
        }
    }

    getItems();

    

    function addToInventory(newItems) {
        console.log("item put in inventory");
        
        // get items from inventory
        let items = [];
        let storage = localStorage.getItem("inventory");
        if (storage != null && storage != "") {
            items = JSON.parse(storage);
        }

        items.push(...newItems);
        
        localStorage.setItem("inventory", JSON.stringify(items))

        renderItems(items);
    }

    function playAddAnimation() {
        document.querySelector('.inventory').classList.add('highlight');
        setTimeout(() => {
            document.querySelector('.inventory').classList.remove('highlight');
        }, 500);
    }

    function onEvent(data) {
        let item = itemsJson.find(item => item.id == data);

        console.log("on event", item.items);

        if (item.type == "container") {
            let items = item.items.map(id => {
                let item = itemsJson.find(item => item.id == id);
                return item;
            });

            addToInventory(items);
        } else {
            addToInventory([ item ]);
        }
            
        playAddAnimation();
    }

    subscribe("item", onEvent);    
</script>

<style global>

    .inventory {
        max-width: 400px;

        @media (min-width: 1024px) {
            position: fixed;
            right: 0;
            top: 0;
        }
    }

    .item {
        background-color: #222;
        margin-top: 3px;
    }

    .item:hover {
        cursor: pointer;
        opacity: 0.5;
    }


    .highlight {
        animation: fire-animation 1s;
        }

        @keyframes fire-animation {
        0% { background-color: orange; }
        25% { background-color: red; }
        50% { background-color: yellow; }
        75% { background-color: red; }
        100% { background-color: transparent; }
        }

    .modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    .modal-content {
        background-color: black;
        width: 600px;
        height: 700px;
        color: white;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        position: relative;

        box-shadow: 0 0 20px white;
        padding: 40px;
    }

    .modal-content img {
        width: 400px;
        border-radius: 100%;
        margin: 20px;
    }

    .close-button {
        position: absolute;
        top: 10px;
        right: 10px;
        cursor: pointer;
        font-size: 20px;
    }

    .fade-out {
        animation: fadeOut 1s forwards;
    }

    @keyframes fadeOut {
        0% { opacity: 1; }
        100% { opacity: 0; }
    }
</style>

